<?php
return [
 
    'router' => [
        'routes' => [
            'ecamp-api.rest.doctrine.camp' => [
                'type' => 'Segment',
                'options' => [
                    'route' => '/api/camp[/:camp_id]',
                    'defaults' => [
                        'controller' => 'EcampApi\\V1\\Rest\\Camp\\Controller',
                    ],
                ],
            ],
        ],
    ],
    'zf-versioning' => [
        'uri' => [
            0 => 'ecamp-api.rest.doctrine.camp',
        ],
    ],
    'zf-rest' => [
        'EcampApi\\V1\\Rest\\Camp\\Controller' => [
            'listener' => \EcampApi\V1\Rest\Camp\CampResource::class,
            'route_name' => 'ecamp-api.rest.doctrine.camp',
            'route_identifier_name' => 'camp_id',
            'entity_identifier_name' => 'id',
            'collection_name' => 'items',
            'entity_http_methods' => [
                0 => 'GET',
                1 => 'PATCH',
                2 => 'PUT',
                3 => 'DELETE',
            ],
            'collection_http_methods' => [
                0 => 'GET',
                1 => 'POST',
            ],
            'collection_query_whitelist' => [],
            'page_size' => 25,
            'page_size_param' => null,
            'entity_class' => \EcampCore\Entity\Camp::class,
            'collection_class' => \EcampApi\V1\Rest\Camp\CampCollection::class,
            'service_name' => 'Camp',
        ],
    ],
    'zf-content-negotiation' => [
        'controllers' => [
            'EcampApi\\V1\\Rest\\Camp\\Controller' => 'HalJson',
        ],
        'accept-whitelist' => [
            'EcampApi\\V1\\Rest\\Camp\\Controller' => [
                0 => 'application/vnd.ecamp-api.v1+json',
                1 => 'application/hal+json',
                2 => 'application/json',
            ],
        ],
        'content-type-whitelist' => [
            'EcampApi\\V1\\Rest\\Camp\\Controller' => [
                0 => 'application/json',
            ],
        ],
    ],
    'zf-hal' => [
        'metadata_map' => [
            \EcampCore\Entity\Camp::class => [
                'route_identifier_name' => 'camp_id',
                'entity_identifier_name' => 'id',
                'route_name' => 'ecamp-api.rest.doctrine.camp',
                'hydrator' => 'EcampApi\\V1\\Rest\\Camp\\CampHydrator',
            ],
            \EcampApi\V1\Rest\Camp\CampCollection::class => [
                'entity_identifier_name' => 'id',
                'route_name' => 'ecamp-api.rest.doctrine.camp',
                'is_collection' => true,
            ],
        ],
    ],
	
	'zf-apigility-doctrine-query-provider' => [
			'aliases' => [
					'camp' => \EcampCore\Query\Provider\Camp::class,
			],
			'factories' => [
					\EcampCore\Query\Provider\Camp::class => \Zend\ServiceManager\Factory\InvokableFactory::class,
			],
	],
		
    'zf-apigility' => [
        'doctrine-connected' => [
            \EcampApi\V1\Rest\Camp\CampResource::class => [
                'object_manager' => 'doctrine.entitymanager.orm_default',
                'hydrator' => 'EcampApi\\V1\\Rest\\Camp\\CampHydrator',
            	'query_providers' => [
            			'default' => 'camp'
            	],
            ],
        ],
    ],
	'service_manager' => [
			'factories' => [
					'EcampApi\Hydrator\CampHydrator' => 'EcampApi\Hydrator\CampHydratorFactory',
			],
			
	],
	
    'doctrine-hydrator' => [
        'EcampApi\\V1\\Rest\\Camp\\CampHydrator' => [
            'entity_class' => \EcampCore\Entity\Camp::class,
            'object_manager' => 'doctrine.entitymanager.orm_default',
            'by_value' => true,
            'strategies' => [],
            'use_generated_hydrator' => true,
        	'hydrator' => 'EcampApi\Hydrator\CampHydrator',
        	'filters' => [
        			[ 'filter' => EcampApi\Hydrator\Filter\BaseEntityFilter::class ]
        	]
        ],
    ],
    'zf-content-validation' => [
        'EcampApi\\V1\\Rest\\Camp\\Controller' => [
            'input_filter' => 'EcampApi\\V1\\Rest\\Camp\\Validator',
        ],
    ],
		
	// FIXME: autogenerated from Apigility UI; to be checked
    'input_filter_specs' => [
        'EcampApi\\V1\\Rest\\Camp\\Validator' => [
            0 => [
                'name' => 'createdAt',
                'required' => true,
                'filters' => [],
                'validators' => [],
            ],
            1 => [
                'name' => 'updatedAt',
                'required' => true,
                'filters' => [],
                'validators' => [],
            ],
            2 => [
                'name' => 'name',
                'required' => true,
                'filters' => [
                    0 => [
                        'name' => \Zend\Filter\StringTrim::class,
                    ],
                    1 => [
                        'name' => \Zend\Filter\StripTags::class,
                    ],
                ],
                'validators' => [
                    0 => [
                        'name' => \Zend\Validator\StringLength::class,
                        'options' => [
                            'min' => 1,
                            'max' => 32,
                        ],
                    ],
                ],
            ],
            3 => [
                'name' => 'title',
                'required' => true,
                'filters' => [
                    0 => [
                        'name' => \Zend\Filter\StringTrim::class,
                    ],
                    1 => [
                        'name' => \Zend\Filter\StripTags::class,
                    ],
                ],
                'validators' => [
                    0 => [
                        'name' => \Zend\Validator\StringLength::class,
                        'options' => [
                            'min' => 1,
                            'max' => 64,
                        ],
                    ],
                ],
            ],
            4 => [
                'name' => 'motto',
                'required' => true,
                'filters' => [
                    0 => [
                        'name' => \Zend\Filter\StringTrim::class,
                    ],
                    1 => [
                        'name' => \Zend\Filter\StripTags::class,
                    ],
                ],
                'validators' => [
                    0 => [
                        'name' => \Zend\Validator\StringLength::class,
                        'options' => [
                            'min' => 1,
                            'max' => 128,
                        ],
                    ],
                ],
            ],
            5 => [
                'name' => 'visibility',
                'required' => true,
                'filters' => [
                    0 => [
                        'name' => \Zend\Filter\StringTrim::class,
                    ],
                    1 => [
                        'name' => \Zend\Filter\StripTags::class,
                    ],
                ],
                'validators' => [
                    0 => [
                        'name' => \Zend\Validator\StringLength::class,
                        'options' => [
                            'min' => 1,
                            'max' => 16,
                        ],
                    ],
                ],
            ],
            6 => [
                'name' => 'printConfig',
                'required' => false,
                'filters' => [
                    0 => [
                        'name' => \Zend\Filter\StringTrim::class,
                    ],
                    1 => [
                        'name' => \Zend\Filter\StripTags::class,
                    ],
                ],
                'validators' => [
                    0 => [
                        'name' => \Zend\Validator\StringLength::class,
                        'options' => [
                            'min' => 1,
                            'max' => 2048,
                        ],
                    ],
                ],
            ],
        ],
    ],
		
	// FIXME: disabled for GET until authentication is implemented
    'zf-mvc-auth' => [
        'authorization' => [
            'EcampApi\\V1\\Rest\\Camp\\Controller' => [
                'collection' => [
                    'GET' => false,
                    'POST' => true,
                    'PUT' => false,
                    'PATCH' => false,
                    'DELETE' => false,
                ],
                'entity' => [
                    'GET' => false,
                    'POST' => false,
                    'PUT' => true,
                    'PATCH' => true,
                    'DELETE' => true,
                ],
            ],
        ],
    ],
];
