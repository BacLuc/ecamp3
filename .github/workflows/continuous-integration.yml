name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  backend-cs-check:
    name: "Backend: PHP CS Fixer"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - uses: OskarStark/php-cs-fixer-ga@2.17.0
        with:
          args: --dry-run --diff --config=backend/.php_cs

  frontend-eslint:
    name: "Frontend: ESLint"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm install
        working-directory: frontend

      - run: npm run lint
        working-directory: frontend

  print-eslint:
    name: "Print: ESLint"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm install
        working-directory: print

      - run: npm run lint
        working-directory: print

  backend-tests:
    name: "Backend: Tests"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Get Composer Cache Directory
        id: composer-cache
        run: 'echo "::set-output name=dir::$(composer config cache-files-dir)"'
        working-directory: backend

      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - uses: php-actions/composer@v4
        with:
          working_dir: backend

      - uses: php-actions/phpunit@v1
        with:
          configuration: backend/phpunit.xml
          memory_limit: -1
          bootstrap: backend/vendor/autoload.php

  frontend-tests:
    name: "Frontend: Tests"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm install
        working-directory: frontend

      - run: npm run test:unit
        working-directory: frontend

  e2e-tests:
    name: "End-to-end tests"
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - run: docker-compose up -d --build composer backend frontend db

      - run: bash wait-for-container-startup.sh

      - run: docker run -v $PWD:/e2e -w /e2e --network host -e CYPRESS_BASE_URL=http://localhost:3000 cypress/included:3.4.0
        working-directory: frontend

  ci-passed-event:
    name: "Send out CI success event"
    needs:
      - backend-cs-check
      - frontend-eslint
      - print-eslint
      - backend-tests
      - frontend-tests
      - e2e-tests
    runs-on: ubuntu-latest
    steps:

      - uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: ci-passed
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
